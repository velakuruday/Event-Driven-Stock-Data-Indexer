buildscript {
    repositories {
        mavenCentral()
    }
    ext {
        resilience4jVersion = '1.7.0'
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'checkstyle'
    id 'com.adarshr.test-logger' version '3.0.0'
    id 'org.owasp.dependencycheck' version '6.2.2'
    id 'org.openapi.generator' version '5.3.0'
}

group = 'com.eventapi'
version = ''
sourceCompatibility = '11'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }

    compileOnly {
        extendsFrom annotationProcessor
    }

    datadogAgent

    all {
        /* Exclude JUnit 4, only JUnit 5 should be used */
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

repositories {
    mavenCentral()
}
def generatedDir = "$buildDir/generated"
sourceSets {
    main {
        java {
            srcDir 'src/main/java'
            srcDir generatedDir + '/src/main/java'
        }
    }
}

test {
    useJUnit()
    outputs.upToDateWhen { false }
}

checkstyle {
    toolVersion = '8.39'
    ignoreFailures = true
    configDirectory.set(file("$rootProject.projectDir/gradle"))
}

dependencies {
    // Spring MVC, testing, and devtools
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // Lombok annotations to reduce boilerplate code
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    // JSON output for Logback logger
    implementation 'net.logstash.logback:logstash-logback-encoder:7.1.1'
    // Spring Batch job execution (for cron jobs)
    implementation 'org.springframework.batch:spring-batch-core'
    testImplementation 'org.springframework.batch:spring-batch-test'
    // Kafka
    implementation 'org.springframework.kafka:spring-kafka:2.8.5'
    implementation 'org.springframework.kafka:spring-kafka-test:2.8.5'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    // OpenAPI
    implementation 'io.swagger:swagger-annotations:1.6.3'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.12.4'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.2'
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    implementation 'javax.ws.rs:javax.ws.rs-api:2.1.1'
    // OpenAPI new dependency
    compileOnly 'io.springfox:springfox-boot-starter:3.0.0'
    // JSON column types
    implementation 'com.vladmihalcea:hibernate-types-52:2.16.2'
    // HTTPClient usage
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'
    //r4j
    implementation "io.github.resilience4j:resilience4j-retry:${resilience4jVersion}"
    //Elasticsearch
    implementation 'org.elasticsearch:elasticsearch:7.13.1'
    implementation 'org.elasticsearch.client:elasticsearch-rest-client:7.13.1'
    implementation 'org.elasticsearch.client:elasticsearch-rest-high-level-client:7.13.1'
}

task generateApi(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
    inputs.dir("${rootDir}/spec/")
    outputs.dir(generatedDir)

    doFirst {
        delete "${generatedDir}/src/main/java/com/indi/eventapi"
        mkdir generatedDir
    }

    generatorName = "spring"
    inputSpec = "${rootDir}/spec/update.yml"
    outputDir = generatedDir
    invokerPackage = "com.indi.eventapi"
    apiPackage = "com.indi.eventapi"
    modelPackage = "com.indi.eventapi.dto"
    modelNameSuffix = "Dto"
    configOptions = [
            library                : "spring-mvc",
            dateLibrary            : "java8",
            useBeanValidation      : "true",
            performBeanValidation  : "true",
            hideGenerationTimestamp: "true",
            interfaceOnly          : "true",
            skipDefaultInterface   : "true",
            useTags                : "true",
            additionalModelTypeAnnotations: "@lombok.Builder;@lombok.AllArgsConstructor"
    ]
}

compileJava.dependsOn(
        'generateApi'
)
